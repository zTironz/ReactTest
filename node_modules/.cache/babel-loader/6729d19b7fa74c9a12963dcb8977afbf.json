{"ast":null,"code":"import _classCallCheck from\"/Users/olegmikrukov/Documents/Rep GIT/reactTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/olegmikrukov/Documents/Rep GIT/reactTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/olegmikrukov/Documents/Rep GIT/reactTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/olegmikrukov/Documents/Rep GIT/reactTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/olegmikrukov/Documents/Rep GIT/reactTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./Message.css';var Message=/*#__PURE__*/function(_React$Component){_inherits(Message,_React$Component);var _super=_createSuper(Message);function Message(){var _this;_classCallCheck(this,Message);_this=_super.call(this);_this.state={isLiked:false,counter:0};_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));return _this;}_createClass(Message,[{key:\"componentDidMount\",value:function componentDidMount(){console.log('я сейчас буду собираться');}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){console.log('я буду разбираться (');}},{key:\"handleClick\",value:function handleClick(){var _this$state=this.state,isLiked=_this$state.isLiked,counter=_this$state.counter;this.setState({isLiked:!isLiked,counter:counter+1});}},{key:\"render\",value:function render(){var _this$props=this.props,name=_this$props.name,logo=_this$props.logo,title=_this$props.title,text=_this$props.text;var _this$state2=this.state,isLiked=_this$state2.isLiked,counter=_this$state2.counter;var date=new Date();var displayDate=\"\".concat(date.getDate(),\"/\").concat(date.getMonth()+1,\"/\").concat(date.getFullYear());console.log(date);console.log(isLiked);var btnClassName=\"message-header-button \".concat(isLiked?'is-active':'');return/*#__PURE__*/React.createElement(\"div\",{className:\"message\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message-header\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"\",className:\"message-header-image\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"message-header-text_block\"},/*#__PURE__*/React.createElement(\"p\",{className:\"message-header-title\"},name),/*#__PURE__*/React.createElement(\"span\",{className:\"message-header-date\"},displayDate)),/*#__PURE__*/React.createElement(\"span\",{className:\"message-header-counter\"},counter),/*#__PURE__*/React.createElement(\"button\",{className:btnClassName,onClick:this.handleClick})),/*#__PURE__*/React.createElement(\"div\",{className:\"message-body\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"message-body-title\"},title),/*#__PURE__*/React.createElement(\"p\",{className:\"message-body-content\"},text)));}}]);return Message;}(React.Component);// function Message(props) {\n//     const {name, logo, title, text} = props;\n//     const date = new Date();\n//     const displayDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n//     console.log(date);\n//     return (\n//         <div className=\"message\">\n//           <div className='message-header'>\n//             <img src={logo} alt='' className='message-header-image' />\n//             <div className=\"message-header-text_block\">\n//               <p className=\"message-header-title\">{name}</p>\n//               <span className=\"message-header-date\">{displayDate}</span>\n//             </div>\n//           </div>\n//           <div className=\"message-body\">\n//             <h2 className=\"message-body-title\">\n//               {title}\n//             </h2>\n//             <p className=\"message-body-content\">\n//               {text}\n//             </p>\n//           </div>\n//         </div>\n//     );\n//   }\nexport default Message;","map":{"version":3,"sources":["/Users/olegmikrukov/Documents/Rep GIT/reactTest/src/components/Message.js"],"names":["React","Message","state","isLiked","counter","handleClick","bind","console","log","setState","props","name","logo","title","text","date","Date","displayDate","getDate","getMonth","getFullYear","btnClassName","Component"],"mappings":"8zBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,eAAP,C,GAIMC,CAAAA,O,8GACJ,kBAAc,yCACV,wBAEA,MAAKC,KAAL,CAAa,CACTC,OAAO,CAAE,KADA,CAETC,OAAO,CAAE,CAFA,CAAb,CAIA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CAPU,aAQb,C,iFAEmB,CAClBC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EACD,C,mEAEsB,CACrBD,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACD,C,iDAIa,iBACe,KAAKN,KADpB,CACLC,OADK,aACLA,OADK,CACIC,OADJ,aACIA,OADJ,CAEZ,KAAKK,QAAL,CAAc,CAAEN,OAAO,CAAE,CAACA,OAAZ,CAAqBC,OAAO,CAAEA,OAAO,CAAG,CAAxC,CAAd,EACD,C,uCAEQ,iBAC2B,KAAKM,KADhC,CACAC,IADA,aACAA,IADA,CACMC,IADN,aACMA,IADN,CACYC,KADZ,aACYA,KADZ,CACmBC,IADnB,aACmBA,IADnB,kBAEoB,KAAKZ,KAFzB,CAEAC,OAFA,cAEAA,OAFA,CAESC,OAFT,cAESA,OAFT,CAGP,GAAMW,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACA,GAAMC,CAAAA,WAAW,WAAMF,IAAI,CAACG,OAAL,EAAN,aAAwBH,IAAI,CAACI,QAAL,GAAkB,CAA1C,aAA+CJ,IAAI,CAACK,WAAL,EAA/C,CAAjB,CACAb,OAAO,CAACC,GAAR,CAAYO,IAAZ,EACAR,OAAO,CAACC,GAAR,CAAYL,OAAZ,EACA,GAAMkB,CAAAA,YAAY,iCAA4BlB,OAAO,CAAG,WAAH,CAAiB,EAApD,CAAlB,CACA,mBACI,2BAAK,SAAS,CAAC,SAAf,eACE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BAAK,GAAG,CAAES,IAAV,CAAgB,GAAG,CAAC,EAApB,CAAuB,SAAS,CAAC,sBAAjC,EADF,cAEE,2BAAK,SAAS,CAAC,2BAAf,eACE,yBAAG,SAAS,CAAC,sBAAb,EAAqCD,IAArC,CADF,cAEE,4BAAM,SAAS,CAAC,qBAAhB,EAAuCM,WAAvC,CAFF,CAFF,cAME,4BAAM,SAAS,CAAC,wBAAhB,EAA0Cb,OAA1C,CANF,cAOE,8BACA,SAAS,CAAEiB,YADX,CAEA,OAAO,CAAE,KAAKhB,WAFd,EAPF,CADF,cAaE,2BAAK,SAAS,CAAC,cAAf,eACE,0BAAI,SAAS,CAAC,oBAAd,EACGQ,KADH,CADF,cAIE,yBAAG,SAAS,CAAC,sBAAb,EACGC,IADH,CAJF,CAbF,CADJ,CAwBD,C,qBA1DmBd,KAAK,CAACsB,S,EA8D5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAerB,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport './Message.css';\n\n\n\nclass Message extends React.Component {\n  constructor() {\n      super();\n\n      this.state = {\n          isLiked: false,\n          counter: 0\n      };\n      this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('я сейчас буду собираться');\n  }\n\n  componentWillUnmount() {\n    console.log('я буду разбираться (');\n  }\n\n\n\n  handleClick() {\n    const {isLiked, counter} = this.state;\n    this.setState({ isLiked: !isLiked, counter: counter + 1})\n  }\n\n  render() {\n    const {name, logo, title, text} = this.props;\n    const {isLiked, counter} = this.state;\n    const date = new Date();\n    const displayDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n    console.log(date);\n    console.log(isLiked);\n    const btnClassName = `message-header-button ${isLiked ? 'is-active' : ''}`\n    return (\n        <div className=\"message\">\n          <div className='message-header'>\n            <img src={logo} alt='' className='message-header-image' />\n            <div className=\"message-header-text_block\">\n              <p className=\"message-header-title\">{name}</p>\n              <span className=\"message-header-date\">{displayDate}</span>\n            </div>\n            <span className=\"message-header-counter\">{counter}</span>\n            <button \n            className={btnClassName}\n            onClick={this.handleClick}\n            />\n          </div>\n          <div className=\"message-body\">\n            <h2 className=\"message-body-title\">\n              {title}\n            </h2>\n            <p className=\"message-body-content\">\n              {text}\n            </p>\n          </div>\n        </div>\n    );\n  }\n  \n}\n\n// function Message(props) {\n//     const {name, logo, title, text} = props;\n//     const date = new Date();\n//     const displayDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n//     console.log(date);\n//     return (\n//         <div className=\"message\">\n//           <div className='message-header'>\n//             <img src={logo} alt='' className='message-header-image' />\n//             <div className=\"message-header-text_block\">\n//               <p className=\"message-header-title\">{name}</p>\n//               <span className=\"message-header-date\">{displayDate}</span>\n//             </div>\n//           </div>\n//           <div className=\"message-body\">\n//             <h2 className=\"message-body-title\">\n//               {title}\n//             </h2>\n//             <p className=\"message-body-content\">\n//               {text}\n//             </p>\n//           </div>\n//         </div>\n//     );\n//   }\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}